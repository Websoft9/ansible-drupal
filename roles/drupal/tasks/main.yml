---
# import php runtime meta data
- include_vars: roles/role_php/vars/php_runtime_meta.yml

#Modify var for this playbook
- set_fact:
    drupal_vhost_dir: "{{php_runtime_meta[ansible_os_family][drupal_webs].vhost_dir}}"
    drupal_vhost_src: "{{php_runtime_meta[ansible_os_family][drupal_webs].vhost_src}}"
    drupal_service: "{{php_runtime_meta[ansible_os_family][drupal_webs].service}}"
    drupal_owner: "{{php_runtime_meta[ansible_os_family][drupal_webs].owner}}"
    drupal_db_password: "{{mysql_root_password}}"

- debug:
    msg: runtime {{ drupal_vhost_dir }}, {{drupal_vhost_src}}, {{drupal_service}}, {{drupal_owner}}, {{drupal_webs}}, {{ansible_distribution}}

# Drupal
- name: Remove extra dir
  shell: rm -rf /data/wwwroot/{{drupal_name}}
  
- name: Create drupal User
  user:
    name: drupal
    shell: /bin/bash

- name: Add drupal Permission
  shell: |
    setfacl -R -m  u:drupal:rwx /data/wwwroot/
    setfacl -m u:drupal:rx /bin/composer

- name: Use composer install drupal
  shell: composer create-project drupal/recommended-project /data/wwwroot/{{drupal_name}}
  become_method: su
  become_user: drupal

# 系统通用
- name: Permission directory
  shell: |
    find /data/wwwroot -type d -exec chmod 750 {} \;
    find /data/wwwroot -not -type d -exec chmod 640 {} \;

# 根据不同的基础环境分别处理
- block:
  - name: change owner&group
    shell: chown -R {{drupal_owner}}:{{drupal_owner}} /data/wwwroot

  - name: Copy Apache or Nginx vhost configuration
    template: src={{drupal_vhost_src}} dest={{drupal_vhost_dir}}
    
  - name: restart Apache or Nginx
    service: name={{drupal_service}} state=restarted enabled=yes

  - name: restart php-fpm
    service: name=php-fpm state=restarted
